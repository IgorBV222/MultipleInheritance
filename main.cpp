#include <iostream>
#include "Header.h"

int main() {

//Задача 1.
//Напишите комментарием в коде, в чем заключается проблема ромбовидного наследования на примере вызова функции базового класса в последнем
//наследнике(который в свою очередь множественно наследуется от	промежуточных классов в ромбовидной иерархии).
//Ответ:
//В последнем наследнике функция базового класса будет вызываться через промежуточные классы.
//В этом и проблема - компилятор не будет знать к какому из промежуточных классов обратитбся.

//Задача 2.
//Напишите пример ромбовидного наследования, в котором эта проблема решена.В main() вызовите функцию базового класса через наследника
//(обычным, способом, без указателей и динамического полиморфизма) : LastDerived ld; std::cout << ld.getMethod() << std::endl;

	LastDerived ld;
	std::cout <<"LastDerived ld = " << ld.getMethod() << std::endl;


	return 0;
}